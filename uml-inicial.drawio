<mxfile host="app.diagrams.net" modified="2024-05-21T19:46:31.914Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36" etag="zgH8Zmoca0h8Rh_gERcn" version="24.4.4" type="github">
  <diagram name="Page-1" id="c4acf3e9-155e-7222-9cf6-157b1a14988f">
    <mxGraphModel dx="30" dy="460" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="kV0-iDQ7QP0k2PLV0nqi-2" value="Classname" style="swimlane;html=1;fontStyle=0;childLayout=stackLayout;horizontal=1;startSize=26;fillColor=none;horizontalStack=0;resizeParent=1;resizeLast=0;collapsible=1;marginBottom=0;swimlaneFillColor=#ffffff;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;fontFamily=Verdana;fontSize=10;align=center;" parent="1" vertex="1">
          <mxGeometry x="880" y="87" width="160" height="110" as="geometry" />
        </mxCell>
        <mxCell id="kV0-iDQ7QP0k2PLV0nqi-3" value="+ field: type" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;whiteSpace=wrap;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="kV0-iDQ7QP0k2PLV0nqi-2" vertex="1">
          <mxGeometry y="26" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kV0-iDQ7QP0k2PLV0nqi-4" value="+ field: type" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;whiteSpace=wrap;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="kV0-iDQ7QP0k2PLV0nqi-2" vertex="1">
          <mxGeometry y="52" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kV0-iDQ7QP0k2PLV0nqi-5" value="+ field: type" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;whiteSpace=wrap;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="kV0-iDQ7QP0k2PLV0nqi-2" vertex="1">
          <mxGeometry y="78" width="160" height="26" as="geometry" />
        </mxCell>
        <mxCell id="kV0-iDQ7QP0k2PLV0nqi-10" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Interface&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ field1: Type&lt;br/&gt;+ field2: Type&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ method1(Type): Type&lt;br/&gt;+ method2(Type, Type): Type&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1" parent="1" vertex="1">
          <mxGeometry x="1070" y="87" width="190" height="140" as="geometry" />
        </mxCell>
        <mxCell id="GO7QZFpmpaeCV5GQR35J-1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Llamada&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- tipoDeLlamada:String&lt;br&gt;- origen:String&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- destino:String&lt;br&gt;- duracion:int&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ &amp;lt;&amp;lt;create&amp;gt;&amp;gt; Llamada(String tipoLlamada, String origen, String destino, int duracion):Llamada&lt;br&gt;+&amp;nbsp;getTipoDeLlamada():String&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;getRemitente():String&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;getDuracion():int&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ getOrigen():String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1" parent="1" vertex="1">
          <mxGeometry x="880" y="260" width="510" height="190" as="geometry" />
        </mxCell>
        <mxCell id="GO7QZFpmpaeCV5GQR35J-2" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;GestorNumerosDisponibles&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;- lineas:&lt;span style=&quot;text-wrap: wrap;&quot;&gt;SortedSet&amp;lt;String&amp;gt;&lt;/span&gt;&lt;br&gt;-&amp;nbsp;tipoGenerador:String&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ getLineas():SortedSet&amp;lt;String&amp;gt;&lt;br&gt;+ obtenerNumeroLibre():&lt;span style=&quot;background-color: initial;&quot;&gt;String&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;cambiarTipoGenerador(String valor):&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1" parent="1" vertex="1">
          <mxGeometry x="880" y="480" width="510" height="140" as="geometry" />
        </mxCell>
        <mxCell id="GO7QZFpmpaeCV5GQR35J-3" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;Empresa&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp;&lt;span style=&quot;text-wrap: wrap;&quot;&gt;clientes:&amp;nbsp;&lt;/span&gt;&lt;br&gt;-&amp;nbsp;&lt;span style=&quot;text-wrap: wrap; background-color: initial;&quot;&gt;private List&amp;lt;Cliente&amp;gt; clientes = new ArrayList&amp;lt;Cliente&amp;gt;();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;&lt;span style=&quot;text-wrap: wrap;&quot;&gt;- private List&amp;lt;Llamada&amp;gt; llamadas = new ArrayList&amp;lt;Llamada&amp;gt;();&lt;/span&gt;&lt;br style=&quot;padding: 0px; margin: 0px; text-wrap: wrap;&quot;&gt;&lt;span style=&quot;text-wrap: wrap;&quot;&gt;- private GestorNumerosDisponibles guia = new GestorNumerosDisponibles();&lt;/span&gt;&lt;br style=&quot;padding: 0px; margin: 0px; text-wrap: wrap;&quot;&gt;&lt;span style=&quot;text-wrap: wrap;&quot;&gt;- static double descuentoJur = 0.15;&lt;/span&gt;&lt;br style=&quot;padding: 0px; margin: 0px; text-wrap: wrap;&quot;&gt;&lt;span style=&quot;text-wrap: wrap;&quot;&gt;- static double descuentoFis = 0;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;&lt;br&gt;+&amp;nbsp;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1" parent="1" vertex="1">
          <mxGeometry x="880" y="650" width="510" height="170" as="geometry" />
        </mxCell>
        <mxCell id="GO7QZFpmpaeCV5GQR35J-4" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;Cliente&lt;br&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;-&amp;nbsp;&lt;br&gt;-&amp;nbsp;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+&amp;nbsp;&lt;br&gt;+&amp;nbsp;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1" parent="1" vertex="1">
          <mxGeometry x="1790" y="87" width="190" height="140" as="geometry" />
        </mxCell>
        <UserObject label="package ar.edu.unlp.info.oo2.facturacion_llamadas;&#xa;&#xa;&#xa;import java.util.ArrayList;&#xa;import java.util.List;&#xa;&#xa;&#xa;public class Empresa {&#xa;    &#xa;&#xa;&#xa;    public boolean agregarNumeroTelefono(String str) {&#xa;        boolean encontre = guia.getLineas().contains(str);&#xa;        if (!encontre) {&#xa;            guia.getLineas().add(str);&#xa;            encontre = true;&#xa;            return encontre;&#xa;        } else {&#xa;            encontre = false;&#xa;            return encontre;&#xa;        }&#xa;    }&#xa;&#xa;&#xa;    public String obtenerNumeroLibre() {&#xa;        return guia.obtenerNumeroLibre();&#xa;    }&#xa;&#xa;&#xa;    public Cliente registrarUsuario(String data, String nombre, String tipo) {&#xa;        Cliente var = new Cliente();&#xa;        if (tipo.equals(&quot;fisica&quot;)) {&#xa;            var.setNombre(nombre);&#xa;            String tel = this.obtenerNumeroLibre();&#xa;            var.setTipo(tipo);&#xa;            var.setNumeroTelefono(tel);&#xa;            var.setDNI(data);&#xa;        } else if (tipo.equals(&quot;juridica&quot;)) {&#xa;            String tel = this.obtenerNumeroLibre();&#xa;            var.setNombre(nombre);&#xa;            var.setTipo(tipo);&#xa;            var.setNumeroTelefono(tel);&#xa;            var.setCuit(data);&#xa;        }&#xa;        clientes.add(var);&#xa;        return var;&#xa;    }&#xa;&#xa;&#xa;    public Llamada registrarLlamada(Cliente origen, Cliente destino, String t, int duracion) {&#xa;        Llamada llamada = new Llamada(t, origen.getNumeroTelefono(), destino.getNumeroTelefono(), duracion);&#xa;        llamadas.add(llamada);&#xa;        origen.llamadas.add(llamada);&#xa;        return llamada;&#xa;    }&#xa;&#xa;&#xa;    public double calcularMontoTotalLlamadas(Cliente cliente) {&#xa;        double c = 0;&#xa;        for (Llamada l : cliente.llamadas) {&#xa;            double auxc = 0;&#xa;            if (l.getTipoDeLlamada() == &quot;nacional&quot;) {&#xa;                // el precio es de 3 pesos por segundo más IVA sin adicional por establecer la&#xa;                // llamada&#xa;                auxc += l.getDuracion() * 3 + (l.getDuracion() * 3 * 0.21);&#xa;            } else if (l.getTipoDeLlamada() == &quot;internacional&quot;) {&#xa;                // el precio es de 150 pesos por segundo más IVA más 50 pesos por establecer la&#xa;                // llamada&#xa;                auxc += l.getDuracion() * 150 + (l.getDuracion() * 150 * 0.21) + 50;&#xa;            }&#xa;&#xa;&#xa;            if (cliente.getTipo() == &quot;fisica&quot;) {&#xa;                auxc -= auxc * descuentoFis;&#xa;            } else if (cliente.getTipo() == &quot;juridica&quot;) {&#xa;                auxc -= auxc * descuentoJur;&#xa;            }&#xa;            c += auxc;&#xa;        }&#xa;        return c;&#xa;    }&#xa;&#xa;&#xa;    public int cantidadDeUsuarios() {&#xa;        return clientes.size();&#xa;    }&#xa;&#xa;&#xa;    public boolean existeUsuario(Cliente persona) {&#xa;        return clientes.contains(persona);&#xa;    }&#xa;&#xa;&#xa;    public GestorNumerosDisponibles getGestorNumeros() {&#xa;        return this.guia;&#xa;    }&#xa;}" link="package ar.edu.unlp.info.oo2.facturacion_llamadas;&#xa;&#xa;&#xa;import java.util.ArrayList;&#xa;import java.util.List;&#xa;&#xa;&#xa;public class Empresa {&#xa;    private List&lt;Cliente&gt; clientes = new ArrayList&lt;Cliente&gt;();&#xa;    private List&lt;Llamada&gt; llamadas = new ArrayList&lt;Llamada&gt;();&#xa;    private GestorNumerosDisponibles guia = new GestorNumerosDisponibles();&#xa;&#xa;&#xa;    static double descuentoJur = 0.15;&#xa;    static double descuentoFis = 0;&#xa;&#xa;&#xa;    public boolean agregarNumeroTelefono(String str) {&#xa;        boolean encontre = guia.getLineas().contains(str);&#xa;        if (!encontre) {&#xa;            guia.getLineas().add(str);&#xa;            encontre = true;&#xa;            return encontre;&#xa;        } else {&#xa;            encontre = false;&#xa;            return encontre;&#xa;        }&#xa;    }&#xa;&#xa;&#xa;    public String obtenerNumeroLibre() {&#xa;        return guia.obtenerNumeroLibre();&#xa;    }&#xa;&#xa;&#xa;    public Cliente registrarUsuario(String data, String nombre, String tipo) {&#xa;        Cliente var = new Cliente();&#xa;        if (tipo.equals(&quot;fisica&quot;)) {&#xa;            var.setNombre(nombre);&#xa;            String tel = this.obtenerNumeroLibre();&#xa;            var.setTipo(tipo);&#xa;            var.setNumeroTelefono(tel);&#xa;            var.setDNI(data);&#xa;        } else if (tipo.equals(&quot;juridica&quot;)) {&#xa;            String tel = this.obtenerNumeroLibre();&#xa;            var.setNombre(nombre);&#xa;            var.setTipo(tipo);&#xa;            var.setNumeroTelefono(tel);&#xa;            var.setCuit(data);&#xa;        }&#xa;        clientes.add(var);&#xa;        return var;&#xa;    }&#xa;&#xa;&#xa;    public Llamada registrarLlamada(Cliente origen, Cliente destino, String t, int duracion) {&#xa;        Llamada llamada = new Llamada(t, origen.getNumeroTelefono(), destino.getNumeroTelefono(), duracion);&#xa;        llamadas.add(llamada);&#xa;        origen.llamadas.add(llamada);&#xa;        return llamada;&#xa;    }&#xa;&#xa;&#xa;    public double calcularMontoTotalLlamadas(Cliente cliente) {&#xa;        double c = 0;&#xa;        for (Llamada l : cliente.llamadas) {&#xa;            double auxc = 0;&#xa;            if (l.getTipoDeLlamada() == &quot;nacional&quot;) {&#xa;                // el precio es de 3 pesos por segundo más IVA sin adicional por establecer la&#xa;                // llamada&#xa;                auxc += l.getDuracion() * 3 + (l.getDuracion() * 3 * 0.21);&#xa;            } else if (l.getTipoDeLlamada() == &quot;internacional&quot;) {&#xa;                // el precio es de 150 pesos por segundo más IVA más 50 pesos por establecer la&#xa;                // llamada&#xa;                auxc += l.getDuracion() * 150 + (l.getDuracion() * 150 * 0.21) + 50;&#xa;            }&#xa;&#xa;&#xa;            if (cliente.getTipo() == &quot;fisica&quot;) {&#xa;                auxc -= auxc * descuentoFis;&#xa;            } else if (cliente.getTipo() == &quot;juridica&quot;) {&#xa;                auxc -= auxc * descuentoJur;&#xa;            }&#xa;            c += auxc;&#xa;        }&#xa;        return c;&#xa;    }&#xa;&#xa;&#xa;    public int cantidadDeUsuarios() {&#xa;        return clientes.size();&#xa;    }&#xa;&#xa;&#xa;    public boolean existeUsuario(Cliente persona) {&#xa;        return clientes.contains(persona);&#xa;    }&#xa;&#xa;&#xa;    public GestorNumerosDisponibles getGestorNumeros() {&#xa;        return this.guia;&#xa;    }&#xa;}" id="i89NoKpumRemQjXk_La6-2">
          <mxCell style="text;whiteSpace=wrap;" parent="1" vertex="1">
            <mxGeometry x="880" y="840" width="560" height="1520" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="hVnO4_D6s5UgeL8fyIM1-1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Interface&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ field1: Type&lt;br/&gt;+ field2: Type&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ method1(Type): Type&lt;br/&gt;+ method2(Type, Type): Type&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1" vertex="1" parent="1">
          <mxGeometry x="1320" y="97" width="190" height="140" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
